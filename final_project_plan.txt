use Filepicker.io

User - avatar_id (picture_id)

set up subviews for picture index - all pictures are subviews
PictureIndex, add PictureIndexItem

PictureShow(view):
  (PHASE 2)
  PictureLightBox(view)
  make social stuff that redirects to my LinkedIn page
  (PHASE 3)
  modify JBUILDER for picture show
  CommentsIndex (view):
    CommentIndexItem (view)

    comments JSON:
    send down username, avatar picture url. include in picture.show.jbuilder
    add picture#parse and comment#parse method to get the stuff

(PHASE 4)
liking PictureShow
PictureLike model
PictureLikesController
JBUILDER: add number of likes to the picture
verify if the current user has liked the picture (current_user_like)

Backbone:
PictureLike model
  Picture#like() saves PictureLike model
  Picture#currentUserLike() returns PictureLike model
  custom trigger: this.listenTo(this.model, "like", this.render)
  .trigger("like") inside Picture#like()


------------------------------
1. using keys without memory leaks
  - view gets initialized before old one gets removed
  fixed
2. pagination with link bar
  fixed
  move the logic to the controller (if possible)
3. fix Load More activities...
  just do last 20
4. utility controller for comments and user pages
  use nested route

PAGINATION: -5